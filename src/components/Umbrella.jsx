/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ../../public/models/umbrella.gltf 
*/

import React from "react";
import * as THREE from "three";
import { useGLTF, useTexture } from "@react-three/drei";
import { useCustomization } from "../contexts/Customization";

export function Umbrella(props) {
	const { nodes, materials } = useGLTF("models/umbrella.gltf");

	const { umbrellaShape, fabricColor, steelColor } = useCustomization();

	const fabricTextureProps = useTexture({
		normalMap: "/textures/fabric/Fabric_polyester_001_normal.jpg",
		roughnessMap: "/textures/fabric/Fabric_polyester_001_roughness.jpg",
		heightMap: "/textures/fabric/Fabric_polyester_001_height.png",
		aoMap: "/textures/fabric/Fabric_polyester_001_ambientOcclusion.jpg",
	});

	const steelTextureProps = useTexture({
		normalMap: "/textures/steel/Metal_Steel_Brushed_001_normal.jpg",
		roughnessMap: "/textures/steel/Metal_Steel_Brushed_001_roughness.jpg",
		heightMap: "/textures/steel/Metal_Steel_Brushed_001_height.png",
		aoMap: "/textures/steel/Metal_Steel_Brushed_001_ambientOcclusion.jpg",
		metalnessMap: "/textures/steel/Metal_Steel_Brushed_001_metallic.jpg",
		diffuseMap: "/textures/steel/Metal_Steel_Brushed_001_diffuse.jpg",
	});

	fabricTextureProps.normalMap.repeat.set(3, 3);
	fabricTextureProps.roughnessMap.repeat.set(3, 3);
	fabricTextureProps.heightMap.repeat.set(3, 3);
	fabricTextureProps.aoMap.repeat.set(3, 3);

	fabricTextureProps.normalMap.wrapS =
		fabricTextureProps.normalMap.wrapT =
		fabricTextureProps.roughnessMap.wrapS =
		fabricTextureProps.roughnessMap.wrapT =
		fabricTextureProps.heightMap.wrapS =
		fabricTextureProps.heightMap.wrapT =
		fabricTextureProps.aoMap.wrapS =
		fabricTextureProps.aoMap.wrapT =
			THREE.RepeatWrapping;

	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes.Canopy_Truncated_Square.geometry}
				// material={materials.checker}
				position={[0, -0.05, 0]}
				rotation={[0, 1.571, 0]}
				visible={umbrellaShape.name === "Truncated Square"}
			>
				<meshStandardMaterial
					{...fabricTextureProps}
					color={fabricColor.color}
				/>
			</mesh>
			<mesh
				geometry={nodes.Canopy_Square.geometry}
				// material={materials["checker.002"]}
				position={[0, 1.844, 0]}
				rotation={[-Math.PI, 0, -Math.PI]}
				scale={[0.567, 1, 1]}
				visible={umbrellaShape.name === "Square"}
			>
				<meshStandardMaterial
					{...fabricTextureProps}
					color={fabricColor.color}
				/>
			</mesh>
			<mesh
				geometry={nodes.Canopy_Rectangle.geometry}
				// material={materials["checker.001"]}
				position={[0, 1.823, 0.013]}
				rotation={[-Math.PI, 0, -Math.PI]}
				visible={umbrellaShape.name === "Rectangle"}
			>
				<meshStandardMaterial
					{...fabricTextureProps}
					color={fabricColor.color}
				/>
			</mesh>
			<mesh
				geometry={nodes.Pole.geometry}
				// material={nodes.Pole.material}
				position={[0, 1.158, 0]}
				scale={[0.018, 1.079, 0.018]}
			>
				<meshStandardMaterial
					{...steelTextureProps}
					color={steelColor.color}
				/>
			</mesh>
			<mesh
				geometry={nodes.Base_Center.geometry}
				// material={nodes.Base_Center.material}
				position={[0, 0.025, 0]}
				scale={[0.25, 0.025, 0.25]}
			>
				<meshStandardMaterial
					{...steelTextureProps}
					color={steelColor.color}
				/>
			</mesh>
		</group>
	);
}

useGLTF.preload("models/umbrella.gltf");
